import{d as e}from"./app.f04538c2.js";import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";var r="/angular-security-training/assets/jwt-workflow.42dc24de.png";const s={},a=e('<h1 id="_1-2-jwt-workflow" tabindex="-1"><a class="header-anchor" href="#_1-2-jwt-workflow" aria-hidden="true">#</a> 1.2 JWT Workflow</h1><p><img src="'+r+'" alt="jwt-workflow"></p><ol><li><p>The user <strong>submits the username and password</strong> to an Authentication server.</p></li><li><p>The Authentication server <strong>validates</strong> the username and password combination and <strong>creates a Bearer Token</strong>: JWT token with a payload containing the user technical identifier, and an expiration timestamp.</p></li><li><p>The Authentication server then <strong>takes a secret key</strong>, and uses it to <strong>sign the Header plus Payload</strong> and sends it back to the user browser.</p></li><li><p>The browser <strong>takes the signed JWT</strong> and starts <strong>sending it with each HTTP request</strong> to our Application server.The signed JWT acts effectively as a <strong>temporary user credential</strong>, that replaces the permanent credential which is the username and password combination.</p></li></ol>',3);function n(o,i){return a}var h=t(s,[["render",n]]);export{h as default};
