import{d as e}from"./app.f04538c2.js";import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";const t={},r=e('<h1 id="_1-3-jwt-storage" tabindex="-1"><a class="header-anchor" href="#_1-3-jwt-storage" aria-hidden="true">#</a> 1.3 JWT Storage</h1><p>Storing the JWT in localStorage or sessionStorage <strong>will expose your application to XSS attacks</strong>.</p><h2 id="using-cookies-for-jwt-storage" tabindex="-1"><a class="header-anchor" href="#using-cookies-for-jwt-storage" aria-hidden="true">#</a> Using Cookies for JWT storage</h2><p>Using <strong>cookies</strong> is the best way to store safely your JWT. This tactic can be vulnerable to CSRF though. Therefore, you need to ensure to set <code>SameSite=strict</code> and <code>httpOnly</code> flag for JWT authentication cookies. Also, enable the <strong>CSRF defense mechanisms</strong> provided by your framework.</p>',4);function a(s,n){return r}var d=o(t,[["render",a]]);export{d as default};
